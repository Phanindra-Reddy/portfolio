{"version":3,"sources":["Components/TodoList.js","Components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","todo","dispatch","id","type","onClick","ACTIONS","TOGGLE_TODO","payload","style","textDecoration","completed","name","EDIT_TODO","className","DELETE_TODO","ADD_TODO","reducer","todos","action","Date","now","map","filter","Todo","useReducer","useState","setName","inputRef","useRef","useEffect","current","focus","Fragment","onSubmit","e","preventDefault","value","onChange","target","ref","placeholder","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAqCeA,EAlCE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,SACpB,OACI,8BAEI,oBAAIC,GAAG,WAAP,SACI,qBAAIA,GAAG,OAAP,UACI,uBACIC,KAAK,WACLD,GAAG,eACHE,QAAS,kBAAIH,EAAS,CAACE,KAAKE,EAAQC,YAAYC,QAAQ,CAACL,GAAGF,EAAKE,SAErE,mBAAGA,GAAG,YAAYM,MAAO,CAACC,eAAeT,EAAKU,UAAU,eAAe,IAAvE,SAA6EV,EAAKW,OAClF,wBACIR,KAAK,SACLD,GAAG,UACHE,QAAS,kBAAIH,EAAS,CAACE,KAAKE,EAAQO,UAAUL,QAAQ,CAACL,GAAGF,EAAKE,OAHnE,SAKI,mBAAGW,UAAU,mBAGjB,wBACIV,KAAK,SACLD,GAAG,YACHE,QAAS,kBAAIH,EAAS,CAACE,KAAKE,EAAQS,YAAYP,QAAQ,CAACL,GAAGF,EAAKE,OAHrE,uBCnBPG,EAAU,CACnBU,SAAS,WACTT,YAAY,cACZQ,YAAY,eAEhB,SAASE,EAAQC,EAAOC,GACpB,OAAOA,EAAOf,MACV,KAAKE,EAAQU,SACT,MAAM,GAAN,mBAAWE,GAAX,EAkBKN,EAlBqBO,EAAOX,QAAQI,KAmB1C,CAACT,GAAGiB,KAAKC,MAAOT,KAAKA,EAAMD,WAAU,MAjBxC,KAAKL,EAAQC,YACT,OAAOW,EAAMI,KAAI,SAAArB,GACb,OAAGA,EAAKE,KAAOgB,EAAOX,QAAQL,GACnB,2BAAIF,GAAX,IAAiBU,WAAYV,EAAKU,YAE/BV,KAGf,KAAKK,EAAQS,YACT,OAAOG,EAAMK,QAAO,SAAAtB,GAAI,OAAEA,EAAKE,KAAOgB,EAAOX,QAAQL,MAEzD,QACI,OAAOe,EAInB,IAAiBN,EAgDFY,MA5Cf,WAAgB,IAAD,EACeC,qBAAWR,EAAS,IADnC,mBACJC,EADI,KACGhB,EADH,OAEawB,mBAAS,IAFtB,mBAEJd,EAFI,KAEEe,EAFF,KAGLC,EAAWC,iBAAO,MAcxB,OAZAC,qBAAU,WACNF,EAASG,QAAQC,UACnB,IAWE,eAAC,IAAMC,SAAP,WACI,gDACA,uBAAM9B,GAAG,OAAO+B,SAXxB,SAAwBC,GACpBA,EAAEC,iBACFlC,EAAS,CAACE,KAAKE,EAAQU,SAAUR,QAAQ,CAACI,KAAKA,KAC/Ce,EAAQ,KAQJ,UACI,uBACIU,MAAOzB,EACP0B,SAAU,SAAAH,GAAC,OAAER,EAAQQ,EAAEI,OAAOF,QAC9BG,IAAKZ,EACLxB,KAAK,OACLD,GAAG,YACHsC,YAAY,gBACZC,UAAQ,IAEZ,wBAAQtC,KAAK,SAASD,GAAG,UAAzB,SACI,mBAAGW,UAAU,oBAGrB,gDAEII,EAAMI,KAAI,SAAArB,GACN,OAAO,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,SAAUA,GAA/BD,EAAKE,WCzDhCwC,MATf,WAEE,OACE,qBAAK7B,UAAU,kBAAf,SACE,cAAC,EAAD,OCGS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCadQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9df7c206.chunk.js","sourcesContent":["import React from 'react';\r\nimport {ACTIONS} from './Todo';\r\n\r\nconst TodoList = ({todo,dispatch}) => {\r\n    return ( \r\n        <div>\r\n\r\n            <ul id=\"todoList\">\r\n                <li id=\"list\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        id=\"todoCheckBox\"\r\n                        onClick={()=>dispatch({type:ACTIONS.TOGGLE_TODO,payload:{id:todo.id}})}\r\n                    />\r\n                    <p id=\"todoValue\" style={{textDecoration:todo.completed?'line-through':''}}>{todo.name}</p>\r\n                    <button \r\n                        type=\"button\" \r\n                        id=\"editBtn\"\r\n                        onClick={()=>dispatch({type:ACTIONS.EDIT_TODO,payload:{id:todo.id}})}\r\n                    >\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </button>\r\n\r\n                    <button \r\n                        type=\"button\" \r\n                        id=\"deleteBtn\"\r\n                        onClick={()=>dispatch({type:ACTIONS.DELETE_TODO,payload:{id:todo.id}})}\r\n                    >\r\n                        X\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TodoList;","import React,{useState, useEffect, useReducer, useRef} from 'react';\r\nimport '../App.css'\r\nimport TodoList from './TodoList'\r\n\r\nexport const ACTIONS = {\r\n    ADD_TODO:'add-todo',\r\n    TOGGLE_TODO:'toggle-todo',\r\n    DELETE_TODO:'delete-todo'\r\n}\r\nfunction reducer(todos, action){\r\n    switch(action.type){\r\n        case ACTIONS.ADD_TODO:\r\n            return [...todos, newTodo(action.payload.name)]\r\n\r\n        case ACTIONS.TOGGLE_TODO:\r\n            return todos.map(todo=>{\r\n                if(todo.id === action.payload.id){\r\n                    return {...todo, completed: !todo.completed}\r\n                }\r\n                return todo\r\n            })\r\n\r\n        case ACTIONS.DELETE_TODO:\r\n            return todos.filter(todo=>todo.id !== action.payload.id)\r\n\r\n        default:\r\n            return todos;\r\n    }\r\n}\r\n\r\nfunction newTodo(name){\r\n    return {id:Date.now(), name:name, completed:false}\r\n}\r\n\r\nfunction Todo(){\r\n    const [todos, dispatch] = useReducer(reducer, []);\r\n    const [name, setName] = useState('');\r\n    const inputRef = useRef(null);\r\n    \r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    },[])\r\n\r\n    function handleTodoForm(e){\r\n        e.preventDefault();\r\n        dispatch({type:ACTIONS.ADD_TODO, payload:{name:name}});\r\n        setName('');\r\n    }\r\n\r\n    // console.log(todos);\r\n    \r\n    return ( \r\n        <React.Fragment>\r\n            <h3>React TODO App</h3>\r\n            <form id=\"form\" onSubmit={handleTodoForm}>\r\n                <input\r\n                    value={name}\r\n                    onChange={e=>setName(e.target.value)}\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    id=\"todoInput\"\r\n                    placeholder=\"Enter TODO...\"\r\n                    required\r\n                />\r\n                <button type=\"button\" id=\"todoBtn\">\r\n                    <i className=\"fa fa-plus\"></i>\r\n                </button>\r\n            </form>\r\n            <h3>Your TODO List</h3> \r\n            {\r\n                todos.map(todo=>{\r\n                    return <TodoList key={todo.id} todo={todo} dispatch={dispatch}/>\r\n                })\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default Todo;\r\n\r\n\r\n/* <div className=\"task-counter\">\r\n                <p id=\"total-tasks\" className=\"text-primary\">Total : 10</p>\r\n                <p id=\"completed-tasks\" className=\"text-success\">Completed : 4</p>\r\n                <p id=\"remaining-tasks\" className=\"text-danger\">Remaining : 6</p>\r\n            </div>\r\n\r\n            <div id=\"todoResults\">\r\n                <h3>Your TODO List</h3>\r\n                <ul id=\"todoList\">\r\n\r\n                    <li id=\"list\">\r\n                        <input type=\"checkbox\" id=\"todoCheckBox\"/>\r\n                        <p id=\"todoValue\"> sdfghjhgfdssdfghgdjdjjbsjbms</p>\r\n                        <button type=\"button\" id=\"editBtn\"><i className=\"fa fa-pencil\"></i></button>\r\n                        <button type=\"button\" id=\"deleteBtn\">X</button>\r\n                    </li>\r\n\r\n                </ul>\r\n                \r\n            </div> */","import React from 'react';\nimport './App.css';\nimport Todo from './Components/Todo';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App text-center\">\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import firebase from 'firebase';\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyCzuBarlBUDcZ5caxdaIR1apjmYIhL3ai8\",\n//   authDomain: \"react-todo-app-50792.firebaseapp.com\",\n//   projectId: \"react-todo-app-50792\",\n//   storageBucket: \"react-todo-app-50792.appspot.com\",\n//   messagingSenderId: \"649759497568\",\n//   appId: \"1:649759497568:web:7ad555e7516a3fa0451205\",\n//   measurementId: \"G-K7FJDC4Z2B\"\n// };\n// Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}